name: ai-pr-reviewer

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened]
  pull_request_review_comment:
    types: [created]
  issue_comment:
    types: [created]

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref || github.sha }}-${{ github.workflow }}-${{ github.event_name == 'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    if: (github.event_name == 'issue_comment' && contains(github.event.comment.body, '[run review]') && github.event.issue.pull_request) ||ã€€(github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '[run review]')) || (github.event_name == 'pull_request' && !contains(github.event.pull_request.title, 'release') && !contains(github.event.pull_request.title, 'Release'))
    timeout-minutes: 15
    steps:
      - uses: coderabbitai/openai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          openai_light_model: gpt-4 
          openai_heavy_model: gpt-4 
          openai_timeout_ms: 900000
          path_filters: |
            !db/**
            !**/*.lock
          system_message: |
            You are @coderabbitai, a language model trained by OpenAI.
            Your purpose is to function as a highly experienced software engineer and thoroughly review code, providing code snippets to improve key areas such as:
              - Logic
              - Security
              - Performance
              - Data concurrency
              - Consistency
              - Error handling
              - Maintainability
              - Modularity
              - Complexity
              - Optimization
              - Best practices: DRY, SOLID, KISS

            Please refrain from commenting on minor code style issues or missing comments/documentation.
            Focus on identifying and addressing significant issues to enhance overall code quality, while intentionally ignoring minor problems.
          summarize: |
            Please provide the final response using markdown format with the following content:

              - *Walkthrough*: A high-level summary of the overall changes, not specific to individual files, within 80 words.
              - *Changes*: A table of files and their summaries. Similar changes can be grouped on a single line to save space.

            Avoid adding additional comments to this summary, as it will be added as a comment to the GitHub pull request.
          summarize_release_notes: |
            For this pull request, create a concise release note in markdown format, focusing on its purpose and user stories.
            Categorize the changes as follows in bullet points:
              "New Feature", "Bug fix", "Documentation", "Refactor", "Style",
              "Test", "Chore", "Revert"
            For example:
            ```
            - New Feature: Added integration page to the UI
            ```
            Keep the response within 50-100 words. This response will be used directly as the release note, so avoid adding additional comments.
